{
  "version": "48.0.0",
  "artifacts": {
    "OtelEcsStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "OtelEcsStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "OtelEcsStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://465062709130/us-east-1",
      "properties": {
        "templateFile": "OtelEcsStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::465062709130:role/cdk-hnb659fds-deploy-role-465062709130-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::465062709130:role/cdk-hnb659fds-cfn-exec-role-465062709130-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-465062709130-us-east-1/a6e0ae21ebbc1846a55dd9803071bdd9dec0141b3de57374c6b1b7ac84d9c9d4.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "OtelEcsStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::465062709130:role/cdk-hnb659fds-lookup-role-465062709130-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "OtelEcsStack.assets"
      ],
      "metadata": {
        "/OtelEcsStack/VPC": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "natGateways": "*",
              "maxAzs": "*"
            }
          }
        ],
        "/OtelEcsStack/VPC/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCB9E5F0B4"
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addNatGateway": [
                "*"
              ]
            }
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1SubnetB4246D30"
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1RouteTableFEE4B781"
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1RouteTableAssociation0B0896DC"
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1DefaultRoute91CEF279"
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1EIP6AD938E8"
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1NATGatewayE0556630"
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet2Subnet74179F39"
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet2RouteTable6F1A15F1"
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet2RouteTableAssociation5A808732"
          }
        ],
        "/OtelEcsStack/VPC/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet2DefaultRouteB7481BBA"
          }
        ],
        "/OtelEcsStack/VPC/PrivateSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/OtelEcsStack/VPC/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet1Subnet8BCA10E0"
          }
        ],
        "/OtelEcsStack/VPC/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet1RouteTableBE8A6027"
          }
        ],
        "/OtelEcsStack/VPC/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet1RouteTableAssociation347902D1"
          }
        ],
        "/OtelEcsStack/VPC/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet1DefaultRouteAE1D6490"
          }
        ],
        "/OtelEcsStack/VPC/PrivateSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/OtelEcsStack/VPC/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet2SubnetCFCDAA7A"
          }
        ],
        "/OtelEcsStack/VPC/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet2RouteTable0A19E10E"
          }
        ],
        "/OtelEcsStack/VPC/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet2RouteTableAssociation0C73D413"
          }
        ],
        "/OtelEcsStack/VPC/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet2DefaultRouteF4F5CFD2"
          }
        ],
        "/OtelEcsStack/VPC/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCIGWB7E252D3"
          }
        ],
        "/OtelEcsStack/VPC/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCVPCGW99B986DC"
          }
        ],
        "/OtelEcsStack/VPC/RestrictDefaultSecurityGroupCustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/OtelEcsStack/VPC/RestrictDefaultSecurityGroupCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCRestrictDefaultSecurityGroupCustomResource59474679"
          }
        ],
        "/OtelEcsStack/Custom::VpcRestrictDefaultSGCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/OtelEcsStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
          }
        ],
        "/OtelEcsStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E"
          }
        ],
        "/OtelEcsStack/Cluster": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "clusterName": "*"
            }
          }
        ],
        "/OtelEcsStack/Cluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterEB0386A7"
          }
        ],
        "/OtelEcsStack/OtelConfig/OtelConfig": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*",
              "description": "*",
              "type": "*"
            }
          }
        ],
        "/OtelEcsStack/OtelConfig/OtelConfig/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelConfigB7019AC4"
          }
        ],
        "/OtelEcsStack/ALB": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/OtelEcsStack/ALB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBAEE750D2"
          }
        ],
        "/OtelEcsStack/ALB/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "description": "*",
              "allowAllOutbound": false
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                {
                  "canInlineRule": true,
                  "connections": "*",
                  "uniqueId": "*"
                },
                {},
                "*",
                false
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                {
                  "canInlineRule": true,
                  "connections": "*",
                  "uniqueId": "*"
                },
                {},
                "*",
                false
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addEgressRule": [
                "*",
                {},
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addEgressRule": [
                "*",
                {},
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addEgressRule": [
                "*",
                {},
                "*",
                false
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addEgressRule": [
                "*",
                {},
                "*",
                false
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addEgressRule": [
                "*",
                {},
                "*",
                false
              ]
            }
          }
        ],
        "/OtelEcsStack/ALB/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBSecurityGroup8B8624F8"
          }
        ],
        "/OtelEcsStack/ALB/SecurityGroup/to OtelEcsStackOtelCollectorServiceSecurityGroup471F1F0B:4317": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBSecurityGrouptoOtelEcsStackOtelCollectorServiceSecurityGroup471F1F0B43173E56FE31"
          }
        ],
        "/OtelEcsStack/ALB/SecurityGroup/to OtelEcsStackOtelCollectorServiceSecurityGroup471F1F0B:4318": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBSecurityGrouptoOtelEcsStackOtelCollectorServiceSecurityGroup471F1F0B43181C98E794"
          }
        ],
        "/OtelEcsStack/ALB/SecurityGroup/to OtelEcsStackOtelCollectorServiceSecurityGroup471F1F0B:13133": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBSecurityGrouptoOtelEcsStackOtelCollectorServiceSecurityGroup471F1F0B1313352A9FB8F"
          }
        ],
        "/OtelEcsStack/ALB/GrpcListener": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/OtelEcsStack/ALB/GrpcListener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBGrpcListenerF89B142B"
          }
        ],
        "/OtelEcsStack/ALB/HttpListener": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/OtelEcsStack/ALB/HttpListener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBHttpListener04CE8CD0"
          }
        ],
        "/OtelEcsStack/OtelTargetGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelTargetGroupF7AAF47B"
          }
        ],
        "/OtelEcsStack/OtelHttpTargetGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelHttpTargetGroupB76D6E76"
          }
        ],
        "/OtelEcsStack/OtelCollector/ExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/OtelEcsStack/OtelCollector/ExecutionRole/ImportExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/OtelEcsStack/OtelCollector/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelCollectorExecutionRole3A949A45"
          }
        ],
        "/OtelEcsStack/OtelCollector/ExecutionRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/OtelEcsStack/OtelCollector/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelCollectorExecutionRoleDefaultPolicy3B9AA640"
          }
        ],
        "/OtelEcsStack/OtelCollector/TaskRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "inlinePolicies": "*"
            }
          }
        ],
        "/OtelEcsStack/OtelCollector/TaskRole/ImportTaskRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/OtelEcsStack/OtelCollector/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelCollectorTaskRoleF18C07E7"
          }
        ],
        "/OtelEcsStack/OtelCollector/LogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "logGroupName": "*",
              "retention": 7,
              "removalPolicy": "destroy"
            }
          }
        ],
        "/OtelEcsStack/OtelCollector/LogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelCollectorLogGroup35AE2EF9"
          }
        ],
        "/OtelEcsStack/OtelCollector/TaskDef": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/OtelEcsStack/OtelCollector/TaskDef/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelCollectorTaskDef6D88E9FC"
          }
        ],
        "/OtelEcsStack/OtelCollector/Service": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/aws-cdk-lib@2.214.0_constructs@10.4.2/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/aws-cdk-lib@2.214.0_constructs@10.4.2/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/aws-cdk-lib@2.214.0_constructs@10.4.2/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/aws-cdk-lib@2.214.0_constructs@10.4.2/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3888)",
              "new FargateService2 (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/aws-cdk-lib@2.214.0_constructs@10.4.2/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "new OtelCollectorConstruct (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/lib/constructs/otel-collector.ts:119:20)",
              "new OtelEcsCdkProjectStack (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/lib/otel-ecs-cdk-project-stack.ts:84:27)",
              "Object.<anonymous> (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/bin/otel-ecs-cdk-project.ts:8:1)",
              "Module._compile (node:internal/modules/cjs/loader:1521:14)",
              "Module.m._compile (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/ts-node@10.9.2_@types+node@22.7.9_typescript@5.6.3/node_modules/ts-node/src/index.ts:1618:23)",
              "Module._extensions..js (node:internal/modules/cjs/loader:1623:10)",
              "Object.require.extensions.<computed> [as .ts] (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/ts-node@10.9.2_@types+node@22.7.9_typescript@5.6.3/node_modules/ts-node/src/index.ts:1621:12)",
              "Module.load (node:internal/modules/cjs/loader:1266:32)",
              "Function.Module._load (node:internal/modules/cjs/loader:1091:12)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:164:12)",
              "phase4 (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/ts-node@10.9.2_@types+node@22.7.9_typescript@5.6.3/node_modules/ts-node/src/bin.ts:649:14)",
              "bootstrap (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/ts-node@10.9.2_@types+node@22.7.9_typescript@5.6.3/node_modules/ts-node/src/bin.ts:95:10)",
              "main (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/ts-node@10.9.2_@types+node@22.7.9_typescript@5.6.3/node_modules/ts-node/src/bin.ts:55:10)",
              "Object.<anonymous> (/Users/brianlangbecker/Documents/GitHub/otel-ecs-cdk-project/node_modules/.pnpm/ts-node@10.9.2_@types+node@22.7.9_typescript@5.6.3/node_modules/ts-node/src/bin.ts:800:3)",
              "Module._compile (node:internal/modules/cjs/loader:1521:14)",
              "Object.Module._extensions..js (node:internal/modules/cjs/loader:1623:10)",
              "Module.load (node:internal/modules/cjs/loader:1266:32)",
              "Function.Module._load (node:internal/modules/cjs/loader:1091:12)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:164:12)",
              "node:internal/main/run_main_module:28:49"
            ]
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/OtelEcsStack/OtelCollector/Service/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelCollectorServiceDE6EDB69"
          }
        ],
        "/OtelEcsStack/OtelCollector/Service/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*",
                false
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*",
                false
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*",
                true
              ]
            }
          }
        ],
        "/OtelEcsStack/OtelCollector/Service/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelCollectorServiceSecurityGroup65FB73B9"
          }
        ],
        "/OtelEcsStack/OtelCollector/Service/SecurityGroup/from OtelEcsStackALBSecurityGroup3CC612AE:4317": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelCollectorServiceSecurityGroupfromOtelEcsStackALBSecurityGroup3CC612AE4317C6C8B192"
          }
        ],
        "/OtelEcsStack/OtelCollector/Service/SecurityGroup/from OtelEcsStackALBSecurityGroup3CC612AE:4318": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelCollectorServiceSecurityGroupfromOtelEcsStackALBSecurityGroup3CC612AE431833C0D118"
          }
        ],
        "/OtelEcsStack/OtelCollector/Service/SecurityGroup/from OtelEcsStackALBSecurityGroup3CC612AE:13133": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OtelCollectorServiceSecurityGroupfromOtelEcsStackALBSecurityGroup3CC612AE1313378BF76C4"
          }
        ],
        "/OtelEcsStack/LoadBalancerDNS": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LoadBalancerDNS"
          }
        ],
        "/OtelEcsStack/OTLPGrpcEndpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OTLPGrpcEndpoint"
          }
        ],
        "/OtelEcsStack/OTLPHttpEndpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OTLPHttpEndpoint"
          }
        ],
        "/OtelEcsStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/OtelEcsStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/OtelEcsStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "OtelEcsStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:secGroupsDisablesImplicitOpenListener": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Disable implicit openListener when custom security groups are provided"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1029.2"
}
{
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/Resource"
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PublicSubnet1/Subnet"
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PublicSubnet1/RouteTable"
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PublicSubnet1/DefaultRoute"
   }
  },
  "VPCPublicSubnet1EIP6AD938E8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PublicSubnet1/EIP"
   }
  },
  "VPCPublicSubnet1NATGatewayE0556630": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet1EIP6AD938E8",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC"
   ],
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PublicSubnet1/NATGateway"
   }
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PublicSubnet2/Subnet"
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PublicSubnet2/RouteTable"
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PublicSubnet2/DefaultRoute"
   }
  },
  "VPCPrivateSubnet1Subnet8BCA10E0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PrivateSubnet1/Subnet"
   }
  },
  "VPCPrivateSubnet1RouteTableBE8A6027": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PrivateSubnet1/RouteTable"
   }
  },
  "VPCPrivateSubnet1RouteTableAssociation347902D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VPCPrivateSubnet1DefaultRouteAE1D6490": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "VPCPrivateSubnet2SubnetCFCDAA7A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PrivateSubnet2/Subnet"
   }
  },
  "VPCPrivateSubnet2RouteTable0A19E10E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PrivateSubnet2/RouteTable"
   }
  },
  "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "OtelEcsStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/IGW"
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/VPCGW"
   }
  },
  "VPCRestrictDefaultSecurityGroupCustomResource59474679": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "VPCB9E5F0B4",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "465062709130"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/VPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-east-1:465062709130:security-group/",
             {
              "Fn::GetAtt": [
               "VPCB9E5F0B4",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-465062709130-us-east-1",
     "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200",
    "aws:asset:property": "Code"
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "otel-xray-cluster"
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/Cluster/Resource"
   }
  },
  "TaskExecutionRole250D2532": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/TaskExecutionRole/Resource"
   }
  },
  "TaskExecutionRoleDefaultPolicyA84DD1B0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AppLogGroup7D8CD952",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CollectorLogGroup1D43C0E2",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": [
        "ssm:DescribeParameters",
        "ssm:GetParameter",
        "ssm:GetParameterHistory",
        "ssm:GetParameters"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:us-east-1:465062709130:parameter",
          {
           "Ref": "OtelConfigParameter7DCA18AC"
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:ecr:us-east-1:465062709130:repository/cdk-hnb659fds-container-assets-465062709130-us-east-1"
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TaskExecutionRoleDefaultPolicyA84DD1B0",
    "Roles": [
     {
      "Ref": "TaskExecutionRole250D2532"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/TaskExecutionRole/DefaultPolicy/Resource"
   }
  },
  "OpenTelemetryXrayRole3F5206B8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSXRayDaemonWriteAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchAgentServerPolicy"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/OpenTelemetryXrayRole/Resource"
   }
  },
  "OpenTelemetryXrayRoleDefaultPolicyE148300D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssm:DescribeParameters",
        "ssm:GetParameter",
        "ssm:GetParameterHistory",
        "ssm:GetParameters"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:us-east-1:465062709130:parameter",
          {
           "Ref": "OtelConfigParameter7DCA18AC"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "OpenTelemetryXrayRoleDefaultPolicyE148300D",
    "Roles": [
     {
      "Ref": "OpenTelemetryXrayRole3F5206B8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/OpenTelemetryXrayRole/DefaultPolicy/Resource"
   }
  },
  "OtelConfigParameter7DCA18AC": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "OpenTelemetry Collector configuration for ECS with X-Ray integration",
    "Name": "/otel-ecs-stack/config/OtelEcsStack",
    "Type": "String",
    "Value": "# OpenTelemetry Collector Configuration for ECS/Honeycomb\n# Adapted from working configuration template\n\nextensions:\n  pprof:\n    endpoint: 0.0.0.0:1777\n  \n  # Debug logging extension\n  zpages:\n    endpoint: 0.0.0.0:55679\n  \n  # Health check extension\n  health_check:\n    endpoint: 0.0.0.0:13133\n\nreceivers:\n  # Prometheus receiver for scraping collector metrics\n  prometheus:\n    config:\n      scrape_configs:\n        - job_name: 'otel-collector'\n          scrape_interval: 30s\n          static_configs:\n            - targets: ['localhost:8888']\n\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n        include_metadata: true\n        keepalive:\n          server_parameters:\n            max_connection_age: 1m0s\n            max_connection_age_grace: 5m0s\n            max_connection_idle: 1m0s\n            time: 2h\n            timeout: 20s\n        max_recv_msg_size_mib: 4\n      http:\n        endpoint: 0.0.0.0:4318\n        include_metadata: true\n\nprocessors:\n  batch:\n    send_batch_max_size: 1024\n    send_batch_size: 512\n    timeout: 1s\n\n  memory_limiter:\n    limit_mib: 512\n    spike_limit_mib: 128\n    check_interval: 1s\n\n  resource:\n    attributes:\n      - key: service.name\n        value: \"otel-collector-ecs\"\n        action: upsert\n      - key: deployment.environment\n        value: \"production\"\n        action: upsert\n\nexporters:\n  # Debug exporter to see what data is flowing\n  debug:\n    verbosity: detailed\n\n  # AWS X-Ray exporter for traces\n  awsxray:\n    no_verify_ssl: false\n    local_mode: false\n    region: us-east-1\n\n  # Direct Honeycomb trace exporter\n  otlp/honeycomb_direct_traces:\n    compression: gzip\n    endpoint: ${HONEYCOMB_ENDPOINT}:443\n    headers:\n      x-honeycomb-team: ${HONEYCOMB_API_KEY}\n      x-honeycomb-dataset: ${HONEYCOMB_DATASET}\n    retry_on_failure:\n      enabled: true\n      initial_interval: 5s\n      max_elapsed_time: 300s\n      max_interval: 30s\n    sending_queue:\n      enabled: true\n    tls:\n      insecure: false\n\n  # Direct Honeycomb metrics exporter\n  otlp/honeycomb_direct_metrics:\n    compression: gzip\n    endpoint: ${HONEYCOMB_ENDPOINT}:443\n    headers:\n      x-honeycomb-team: ${HONEYCOMB_API_KEY}\n      x-honeycomb-dataset: otel-collector-metrics\n    retry_on_failure:\n      enabled: true\n      initial_interval: 5s\n      max_elapsed_time: 300s\n      max_interval: 30s\n    sending_queue:\n      enabled: true\n    tls:\n      insecure: false\n\n  # Collector operational metrics exporter\n  otlp/honeycomb_collector_metrics:\n    compression: gzip\n    endpoint: ${HONEYCOMB_ENDPOINT}:443\n    headers:\n      x-honeycomb-team: ${HONEYCOMB_API_KEY}\n      x-honeycomb-dataset: collector-operations\n    retry_on_failure:\n      enabled: true\n      initial_interval: 5s\n      max_elapsed_time: 300s\n      max_interval: 30s\n    sending_queue:\n      enabled: true\n    tls:\n      insecure: false\n\nservice:\n  extensions: [pprof, zpages, health_check]\n  telemetry:\n    logs:\n      level: debug\n      development: true\n      encoding: console\n    metrics:\n      level: detailed\n  pipelines:\n    # Application traces pipeline - send to both X-Ray and Honeycomb\n    traces:\n      receivers:\n        - otlp\n      processors:\n        - memory_limiter\n        - resource\n        - batch\n      exporters:\n        - debug\n        - awsxray\n        - otlp/honeycomb_direct_traces\n\n    # Application metrics pipeline\n    metrics:\n      receivers:\n        - otlp\n      processors:\n        - memory_limiter\n        - batch\n      exporters:\n        - debug\n        - otlp/honeycomb_direct_metrics\n\n    # Collector operational metrics pipeline\n    metrics/collector_operations:\n      receivers:\n        - prometheus\n      processors:\n        - batch\n      exporters:\n        - debug\n        - otlp/honeycomb_collector_metrics"
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/OtelConfigParameter/Resource"
   }
  },
  "AppLogGroup7D8CD952": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/ecs/aws-otel-emitter",
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/AppLogGroup/Resource"
   }
  },
  "CollectorLogGroup1D43C0E2": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/ecs/ecs-aws-otel-sidecar-collector",
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/CollectorLogGroup/Resource"
   }
  },
  "TaskDefinitionB36D86D9": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "--config=env:OTEL_CONFIG"
      ],
      "Environment": [
       {
        "Name": "HONEYCOMB_ENDPOINT",
        "Value": "https://api.honeycomb.io"
       },
       {
        "Name": "HONEYCOMB_API_KEY",
        "Value": "your-honeycomb-api-key-here"
       }
      ],
      "Essential": true,
      "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.30.0",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "CollectorLogGroup1D43C0E2"
        },
        "awslogs-stream-prefix": "ecs",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 512,
      "Name": "aws-otel-collector",
      "PortMappings": [
       {
        "ContainerPort": 4317,
        "Name": "otlp-grpc",
        "Protocol": "tcp"
       },
       {
        "ContainerPort": 4318,
        "Name": "otlp-http",
        "Protocol": "tcp"
       },
       {
        "ContainerPort": 13133,
        "Name": "health-check",
        "Protocol": "tcp"
       },
       {
        "ContainerPort": 8888,
        "Name": "metrics",
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "OTEL_CONFIG",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:us-east-1:465062709130:parameter",
           {
            "Ref": "OtelConfigParameter7DCA18AC"
           }
          ]
         ]
        }
       }
      ]
     },
     {
      "DependsOn": [
       {
        "Condition": "START",
        "ContainerName": "aws-otel-collector"
       }
      ],
      "Environment": [
       {
        "Name": "NODE_ENV",
        "Value": "production"
       },
       {
        "Name": "PORT",
        "Value": "3000"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Sub": "465062709130.dkr.ecr.us-east-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-465062709130-us-east-1:fc6d98c244218c65e893c17c657c0c55ec0c60116cd6a2ce186af12d4b1765c0"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "AppLogGroup7D8CD952"
        },
        "awslogs-stream-prefix": "ecs",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 512,
      "Name": "aws-otel-emitter",
      "PortMappings": [
       {
        "ContainerPort": 3000,
        "Name": "app-port",
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "1024",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "TaskExecutionRole250D2532",
      "Arn"
     ]
    },
    "Family": "otel-using-xray",
    "Memory": "3072",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "OpenTelemetryXrayRole3F5206B8",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/TaskDefinition/Resource"
   }
  },
  "ServiceD69D759B": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "ClusterEB0386A7"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "aws-otel-collector",
      "ContainerPort": 4317,
      "TargetGroupArn": {
       "Ref": "AppTargetGroup3D716DB6"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "ServiceSecurityGroupC96ED6A7",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
       },
       {
        "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
       }
      ]
     }
    },
    "ServiceName": "otel-xray-service",
    "TaskDefinition": {
     "Ref": "TaskDefinitionB36D86D9"
    }
   },
   "DependsOn": [
    "ALBAppListener4D41CC9C",
    "OpenTelemetryXrayRoleDefaultPolicyE148300D",
    "OpenTelemetryXrayRole3F5206B8"
   ],
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/Service/Service"
   }
  },
  "ServiceSecurityGroupC96ED6A7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "OtelEcsStack/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "DependsOn": [
    "OpenTelemetryXrayRoleDefaultPolicyE148300D",
    "OpenTelemetryXrayRole3F5206B8"
   ],
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/Service/SecurityGroup/Resource"
   }
  },
  "ServiceSecurityGroupfromOtelEcsStackALBSecurityGroup3CC612AE43172D2CCF1C": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 4317,
    "GroupId": {
     "Fn::GetAtt": [
      "ServiceSecurityGroupC96ED6A7",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ALBSecurityGroup8B8624F8",
      "GroupId"
     ]
    },
    "ToPort": 4317
   },
   "DependsOn": [
    "OpenTelemetryXrayRoleDefaultPolicyE148300D",
    "OpenTelemetryXrayRole3F5206B8"
   ],
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/Service/SecurityGroup/from OtelEcsStackALBSecurityGroup3CC612AE:4317"
   }
  },
  "ServiceSecurityGroupfromOtelEcsStackALBSecurityGroup3CC612AE30003CA112CD": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "ALB to App",
    "FromPort": 3000,
    "GroupId": {
     "Fn::GetAtt": [
      "ServiceSecurityGroupC96ED6A7",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ALBSecurityGroup8B8624F8",
      "GroupId"
     ]
    },
    "ToPort": 3000
   },
   "DependsOn": [
    "OpenTelemetryXrayRoleDefaultPolicyE148300D",
    "OpenTelemetryXrayRole3F5206B8"
   ],
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/Service/SecurityGroup/from OtelEcsStackALBSecurityGroup3CC612AE:3000"
   }
  },
  "ALBAEE750D2": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "otel-xray-alb",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ALBSecurityGroup8B8624F8",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "VPCPublicSubnet1SubnetB4246D30"
     },
     {
      "Ref": "VPCPublicSubnet2Subnet74179F39"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC",
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTableAssociation5A808732"
   ],
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/ALB/Resource"
   }
  },
  "ALBSecurityGroup8B8624F8": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB OtelEcsStackALB66F0F366",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/ALB/SecurityGroup/Resource"
   }
  },
  "ALBSecurityGrouptoOtelEcsStackServiceSecurityGroupBFEDC0D5431753BAD2BD": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "ServiceSecurityGroupC96ED6A7",
      "GroupId"
     ]
    },
    "FromPort": 4317,
    "GroupId": {
     "Fn::GetAtt": [
      "ALBSecurityGroup8B8624F8",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 4317
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/ALB/SecurityGroup/to OtelEcsStackServiceSecurityGroupBFEDC0D5:4317"
   }
  },
  "ALBSecurityGrouptoOtelEcsStackServiceSecurityGroupBFEDC0D5300056CA07A0": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "ALB to App",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "ServiceSecurityGroupC96ED6A7",
      "GroupId"
     ]
    },
    "FromPort": 3000,
    "GroupId": {
     "Fn::GetAtt": [
      "ALBSecurityGroup8B8624F8",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 3000
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/ALB/SecurityGroup/to OtelEcsStackServiceSecurityGroupBFEDC0D5:3000"
   }
  },
  "ALBAppListener4D41CC9C": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "AppTargetGroup3D716DB6"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ALBAEE750D2"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/ALB/AppListener/Resource"
   }
  },
  "AppTargetGroup3D716DB6": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckIntervalSeconds": 30,
    "HealthCheckPath": "/health",
    "HealthCheckPort": "3000",
    "HealthCheckProtocol": "HTTP",
    "HealthCheckTimeoutSeconds": 5,
    "HealthyThresholdCount": 2,
    "Port": 3000,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "UnhealthyThresholdCount": 5,
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/AppTargetGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/81WTW/bOBD9LdWxYLSt0XaxuSlutzAQNIYd5LCGUYzJiTo1RWr5odQV9N8XFClZTboJsNsWPggi38w8Po6GQ83y2ctX+YtncGfPuNifSdrl7doB3zO4sx9b5LO8van5ps0UuPfg8A4ONjvPnmcsq+BL8TVOui2b36qb5Zwt/U4SX/udQrdpM2iAJOxIkjv8pRWm0KbmC5HGnIS5kJrvR9o6kizqK3UJXvFP2bkzHllGdfNmfs8drKVSLermTSGEQWuv1NwgONIqSmMnoqIXIsSHMY/Z+SZ7nm1PRuBpqIilFAsojFbaO7yGncQjfsQKazWnnmB0DoN3i2V4HZPNloYacPjDK/MWpD2BnP8/Gaej5ERkxCpcKIdG4VhDscelWeEc8E8VKsfWyL0hd3hvtK83bRB73I8QC1WGVVZeYjzzIeHh1WvcPuUVjlPvNNCyTKDlhupRMctASn1XSHnl3U57JVICvsvdZhzUQklSGJF4YLlWCnngHDq8V/S3x5T37ruq3z0l+hGfRBQP/DSFD4Ck/wEemTuG3ObtXHrr0GymieIR+wAVTi6q5Mn+BFNC6CR2/xZvSVHYfK/wiadn+TaMzbVyQArNBEsLrNE0xHEzRKZ5xwiqvF1piaEhWesrFBeH7LzNakOKUw2y4Fx75Y6V6ysMAQWflGtWgYISxVJL4oS2/8ZT7FCY5Dt8k2u9HJaIHiEmWfvCjvUx2sab6lHj47w/z/pLUsd+fU638VKTyCIeT08KuNbB8oDnISzE2oHD0KrsNyn9SfCPEtnvPm68Y9ZW4dfUkCqXYKDCeNTrYTwecZbZ3usGpMd/6ZeJeojtmNSlzdtLXQ4tXKbhhNagQxUpfg+zSjfHDx2WcEYf+jL578G9rkFG6GvmI1iLzuZvNd+jWVRQhp8edMGWr7DWlpw2hwuwuNkylGAdcalB7ECC4qTKZpa3RV1L4v0Vd6lBXPQ2NJtpP5sa2DSArEN13zmBU8drMCW6sYNPpl3HVmi1N7EJJhZvna6meCz3BNyzL41uSKAJG2V9BtYOSlJliLnyrvauY0oLzD/b35rZi/zlH/nrZ58t0ZnxylGF+Sq+/wH5RKm/9QwAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "OtelEcsStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "LoadBalancerDNS": {
   "Description": "DNS name of the load balancer",
   "Value": {
    "Fn::GetAtt": [
     "ALBAEE750D2",
     "DNSName"
    ]
   }
  },
  "ApplicationEndpoint": {
   "Description": "Application endpoint",
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "ALBAEE750D2",
        "DNSName"
       ]
      }
     ]
    ]
   }
  },
  "TaskDefinitionArn": {
   "Description": "Task definition ARN",
   "Value": {
    "Ref": "TaskDefinitionB36D86D9"
   }
  },
  "ClusterName": {
   "Description": "ECS Cluster name",
   "Value": {
    "Ref": "ClusterEB0386A7"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}